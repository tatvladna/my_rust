// Время жизни ссылок
// время жизни -  это механизм, который помогает компилятору гарантировать, 
// что все ссылки в коде будут действительными и не станут висячими ссылками

pub fn link_lifetime() {
    println!("============================== Время жизни ссылок ================================");
    println!("{}", print_mes());

    let mes1 = print_mes();
    println!("Сообщение: {}", mes1);
    let mes2 = static_mes();
    println!("Сообщение: {}", mes2);
}

// если мы возвращаем ссылку, то нужно задать ей время жизни
fn print_mes<'a>() -> &'a str {
    "hello"
}

fn static_mes() -> &'static str {
    "world"
}


// В структурах и в функциях желательно использовать время жизни ссылок

// &str - ссылка, строковый литерал
// String - Динамический объект